# This CI configuration is inspired by
#
# https://kodimensional.dev/github-actions
#
# It builds with a majority of the latest compiler releases from each major GHC
# revision on Linux and builds macOS and Windows against the latest GHC.
name: CI Matrix

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.6', '8.8', '8.10']
        cabal: ['3.2.0.0']
        os: [ubuntu-20.04]

    name: GHC ${{ matrix.ghc }} on ${{ matrix.os }} renovate

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: actions/setup-haskell@v1
      id: setup-haskell
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v2
      name: Cache cabal-store
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.sha }}
        restore-keys: |
          cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-

    - name: Build renovate
      run: |
        cp cabal.project.dist cabal.project
        cabal v2-configure pkg:renovate --write-ghc-environment-files=always -j1 --enable-tests
        cabal v2-build pkg:renovate

    - name: Build renovate x86
      run: |
        cp cabal.project.dist cabal.project
        cabal v2-configure pkg:renovate-x86 --write-ghc-environment-files=always -j1 --enable-tests
        cabal v2-build pkg:renovate-x86

    - name: Build refurbish
      run: |
        cp cabal.project.dist cabal.project
        cabal v2-configure pkg:refurbish --write-ghc-environment-files=always -j1 --enable-tests
        cabal v2-build pkg:refurbish

    - name: Test renovate
      run: |
        cabal v2-test pkg:renovate

    - name: Test renovate x86
      run: |
        cabal v2-test pkg:renovate-x86

    - name: Test refurbish
      if: runner.os == 'Linux'
      # NOTE: Locally, we use a docker runner to isolate test cases in case the
      # rewriter breaks them in a dangerous way. Docker-in-docker isn't so great
      # (and doesn't really work here), so we just disable the runner in CI
      run: |
        sudo apt update
        sudo apt install qemu-user-binfmt qemu-user
        cabal v2-test pkg:refurbish --test-options='--no-docker-runner'

