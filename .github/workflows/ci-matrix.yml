# This CI configuration is inspired by
#
# https://kodimensional.dev/github-actions
#
# It builds with a majority of the latest compiler releases from each major GHC
# revision on Linux and builds macOS and Windows against the latest GHC.
name: CI Matrix

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      TZ: America/Los_Angeles
      CI_TEST_LEVEL: "2"

    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.6', '8.8', '8.10']
        cabal: ['3.4.0.0']
        os: [self-hosted]

    name: GHC ${{ matrix.ghc }} on ${{ matrix.os }} renovate

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v2
      name: Cache cabal-store
      env:
        cacheprefix: 0
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ env.cacheprefix }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.dist') }}-${{ github.sha }}
        restore-keys: |
          ${{ env.cacheprefix }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.dist') }}-
          ${{ env.cacheprefix }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-

    - name: System Dependencies
      run: |
        sudo apt update
        sudo apt install -y software-properties-common apt-transport-https ca-certificates wget
        sudo apt install -y curl zlibc zlib1g zlib1g-dev git zip \
          libgmp3-dev build-essential libtinfo-dev autoconf automake gperf cmake locales \
          python3-distutils python-setuptools antlr3 libantlr3c-dev libtool libtool-bin libboost-all-dev python3-pip libfftw3-dev \
          language-pack-en-base language-pack-en
        sudo locale-gen en_US.UTF-8
        sudo update-locale LANG=$LANG LANGUAGE=$LANGUAGE

    - name: Build Haskell Dependencies
      run: |
        cp cabal.project.dist cabal.project
        cabal configure --write-ghc-environment-files=always --enable-tests --test-show-details=direct
        cabal build pkg:renovate --only-dependencies

    - name: Build renovate
      run: |
        cabal build pkg:renovate

    - name: Test renovate
      run: |
        cabal test pkg:renovate

    - name: Build renovate x86
      run: |
        cabal build pkg:renovate-x86

    - name: Test renovate x86
      run: |
        cabal test pkg:renovate-x86

    - name: Build refurbish
      run: |
        cabal build pkg:refurbish

    - name: DocTest refurbish
      run: |
        sudo apt install -y qemu-user-binfmt qemu-user
        cabal test refurbish:doctests

    - name: Test refurbish
      # NOTE: Locally, we use a docker runner to isolate test cases in case the
      # rewriter breaks them in a dangerous way. Docker-in-docker isn't so great
      # (and doesn't really work here), so we just disable the runner in CI
      timeout-minutes: 240
      env:
        TASTY_ANSI_TRICKS: "false"
        TASTY_COLOR: "never"
      run: |
        cabal test -j -RTS -N -RTS refurbish:refurbish-tests --test-options='--no-docker-runner -j'
